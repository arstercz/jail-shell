#!/bin/sh
#
# Copyright (C) 2017 Ruilin Peng (Nick) <pymumu@gmail.com>
#

JAIL_ROOT_DIR=/var/run/jail-shell
CONF_PATH=/etc/jailed-shell/jail-config
JAIL_SHELL_HOME=/usr/local/jailed-shell
JAILED_CMD=/usr/bin/jailed-cmd
ELF_FILE_LIST="`mktemp`"

showhelp()
{
	echo "Usage: jailed-shell-setup [OPTION]"
	echo "Options:"
	echo "  --list        list jail names."
	echo "  --setup       setup jailed-shell."
	echo "-h, --help      show this help message."
}

link_cp()
{
	local src=$1
	local target=$2
	if [ -d "$target" ]; then
		target="$target/`basename $src`"
	fi

	ln -f -P $src $target 2>/dev/null
	if [ $? -eq 0 ]; then
		return 0
	fi

	cp -a $1 $2
}

cp_lib()
{
	local LIBS_FILE="${ELF_FILE_LIST}.LIBS"
	local LIBS_ALL_FILE="${ELF_FILE_LIST}.LIBS_UNIQ"
	> $LIBS_FILE
	while read FILE
	do
		ldd $FILE >> $LIBS_FILE
	done < $ELF_FILE_LIST

	sort $LIBS_FILE | grep -v "linux-vdso.so" | awk '{if(NF == 2){print $1}else{print $3}}' | uniq > $LIBS_ALL_FILE

	while read FILE
	do
		DIR="`dirname $FILE`"
		LIB_FILE="$FILE"
		if [ ! -d "$1/$DIR" ]; then
			mkdir -m 0755 -p $1/$DIR
		fi
		if [ -h "$FILE" ]; then
			link_cp $FILE $1/$DIR/
			LIB_FILE="$DIR/`readlink $FILE`"
		fi
		DIR="`dirname $LIB_FILE`"
		link_cp $LIB_FILE $1/$DIR/
	done < $LIBS_ALL_FILE

	rm -f $LIBS_ALL_FILE
	rm -f $LIBS_FILE
}

add_elf_file()
{
	echo $1 >> $ELF_FILE_LIST
}

dir()
{
	local userinfo="$4"
	if [ $# -lt 4 ]; then
		return 1
	fi
	user=${userinfo##*:}
	group=${userinfo#*:}
	install -o $user -g $group -m $3 -d $1/$2  
}

clink() 
{
	local userinfo="$5"
	if [ $# -lt 5 ]; then
		return 1
	fi
	user=${userinfo##*:}
	group=${userinfo#*:}
	link_cp $2 $1/$3
	if [ $? -ne 0 ]; then
		return 1
	fi
	chmod $4 $1/$3
	chown $user:$group $1/$3

	if [ -x "$2" ]; then
		add_elf_file "$1/$3"
	fi	
}

hlink()
{
	local userinfo="$5"
	if [ $# -lt 5 ]; then
		return 1
	fi
	user=${userinfo##*:}
	group=${userinfo#*:}
	ln -f -P $2 $1/$3
	if [ $? -ne 0 ]; then
		return 1
	fi
	chmod $4 $1/$3
	chown $user:$group $1/$3

	if [ -x "$2" ]; then
		add_elf_file "$1/$3"
	fi
}

slink()
{
	local userinfo="$4"
	if [ $# -lt 3 ]; then
		return 1
	fi
	user=${userinfo##*:}
	group=${userinfo#*:}

	ln -f -s $2 $1/$3
}

lib()
{
	echo "add lib $@"

	#add_elf_file "$1/$3"
}

cmd()
{
	local userinfo="$5"
	if [ $# -lt 5 ]; then
		return 1
	fi
	user=${userinfo##*:}
	group=${userinfo#*:}

	ln -f -s $JAILED_CMD $1$2
}

setup_jail()
{
	local jail_name=$1
	local jail_cfg=$2
	
	local n

	if [ -z "$jail_name" ]; then
		return 1
	fi

	if [ ! -f "$jail_cfg" ]; then
	   return 1
   	fi	
	LINE_NO=0
	while read CMD ARGS;
	do
		LINE_NO=$((LINE_NO+1))
		case "$CMD" in
		""|\#*)
			continue
			;;
		dir | hlink | slink | clink | lib | cmd)
			;;
		*)
			echo "unknown command at line $LINE_NO: $CMD $ARGS"
			return 1
			;;
		esac

		$CMD $JAIL_ROOT_DIR/$jail_name $ARGS
		if [ $? -ne 0 ]; then
			echo "command failed at line $LINE_NO: $CMD $ARGS"
			return 1
		fi
	done < $jail_cfg

	clink $JAIL_ROOT_DIR/$jail_name $JAIL_SHELL_HOME/jailed-cmd/jailed-cmd $JAILED_CMD 0755 root:root
	if [ $? -ne 0 ]; then
		echo "copy jailed-cmd failed."
		return 1
	fi

	cp_lib $JAIL_ROOT_DIR/$jail_name
	if [ $? -ne 0 ]; then
		echo "copy lib failed."
		return 1
	fi
}

setup_jails()
{
	for JAIL_CFG in `ls $CONF_PATH/*.cfg 2>/dev/null`
	do
		JAIL_NAME="`basename $JAIL_CFG .cfg`"
		setup_jail "$JAIL_NAME" "$JAIL_CFG"
	done
}

list_jail() 
{
	for JAIL_CFG in `ls $CONF_PATH/*.cfg 2>/dev/null`
	do
		JAIL_NAME="`basename $JAIL_CFG .cfg`"
		echo "$JAIL_NAME"
	done	
}

main()
{
	OPTS=`getopt -o h --long help,setup,list \
		-n  "" -- "$@"`

	if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

	# Note the quotes around `$OPTS': they are essential!
	eval set -- "$OPTS"

	while true; do
		case "$1" in
		-h | --help )
			showhelp
			return $!
			shift ;;
		--setup )
			setup_jails
			return $?
			shift ;;
		--list )
			list_jail
			return 0
			;;
		-- ) shift; break ;;
		* ) break ;;
  		esac
	done
}

main $@
ret=$?
rm -fr $ELF_FILE_LIST
exit $ret
