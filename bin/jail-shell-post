#!/bin/sh
# this script is called by pam_jail_shell.so when user login.
# shell ARGS:
# $1: login user name
# $2: jail root path
#

USER="$1"
ROOT_DIR="$2"

JAIL_VAR_DIR="/var/local/jail-shell"
JAIL_WRITE_MNT_DIR="$JAIL_WRITE_MNT_DIR/mnt"
ROOT_DIR_RW="$JAIL_WRITE_MNT_DIR/mnt_write.$USER"

NEED_MODIFY=0
NEED_ADD_USER=0

RW_MOUNTED=0;

umount_rw() 
{
	if [ $RW_MOUNTED -eq 0 ]; then
		return
	fi

	rmdir $ROOT_DIR_RW
	#rmdir $JAIL_WRITE_MNT_DIR
	umount $ROOT_DIR_RW
}


mount_rw()
{
	touch $ROOT_DIR/rw_test >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		rm -f $ROOT_DIR/rw_test
		ROOT_DIR_RW="$ROOT_DIR"
		RW_MOUNTED=0
		return 0
	fi

	RW_MOUNTED=1

	if [ ! -d $JAIL_WRITE_MNT_DIR ]; then
		mkdir -m 0750 $JAIL_WRITE_MNT_DIR
		if [ $? -ne 0 ]; then
			return 1
		fi
	fi

	if [ ! -d $ROOT_DIR_RW ]; then
		mkdir -m 0750 $ROOT_DIR_RW
		if [ $? -ne 0 ]; then
			return 1
		fi		
	fi

	mount --bind $ROOT_DIR $ROOT_DIR_RW
	if [ $? -ne 0 ]; then
		return 1
	fi

	mount -o remount,rw,bind $ROOT_DIR_RW
	if [ $? -ne 0 ]; then
		umount_rw 
		return 1
	fi

	return 0
}


add_user_passwd()
{
	passwd_file="$ROOT_DIR_RW/etc/passwd"

	if [ -z "$USER" ] || [ ! -d "$ROOT_DIR_RW" ]; then
		return 1
	fi

	if [ ! -f "$passwd_file" ]; then
		return 1
	fi
	
	PASS_INFO="`getent passwd $USER`"
	if [ -z "$PASS_INFO" ]; then
		return 1
	fi
	USER_ID="`echo "$PASS_INFO" | awk -F ':' '{print $3}'`"
	GROUP_ID="`echo "$PASS_INFO" | awk -F ':' '{print $4}'`"
	HOME_DIR="`echo "$PASS_INFO" | awk -F ':' '{print $6}'`"
	SH_NAME="`echo "$PASS_INFO" | awk -F ':' '{print $7}'`"

	if [  -z "$USER_ID" ] || [ -z "$GROUP_ID" ]; then
		return 1
	fi

	if [ ! -d "$ROOT_DIR_RW/$HOME_DIR" ]; then
		mkdir $ROOT_DIR_RW/$HOME_DIR
		chown $USER_ID:$GROUP_ID $ROOT_DIR_RW/$HOME_DIR
	fi

	grep "^$USER:" $passwd_file >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		return 0
	fi

	echo "$USER:x:$USER_ID:$GROUP_ID::$HOME_DIR:$SH_NAME" >> $passwd_file
	if [ $? -ne 0 ]; then
		return 1
	fi

	return 0
}

check_user_passwd()
{
	passwd_file="$ROOT_DIR/etc/passwd"	
	grep "^$USER:" $passwd_file >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		return 0
	fi

	NEED_ADD_USER=1
	NEED_MODIFY=1

	return 0
}

check_post()
{
	check_user_passwd
	if [ $? -ne 0 ]; then
		return 1
	fi

	return 0
}

do_user_post()
{
	if [ $NEED_ADD_USER -eq 1 ]; then
		add_user_passwd
		if [ $? -ne 0 ]; then
			return 1
		fi
	fi

	return 0
}

main()
{
	ret=0
	check_post
	if [ $? -ne 0 ]; then
		return 1
	fi

	if [ $NEED_MODIFY -eq 0 ]; then
		return 0
	fi
	 	
	mount_rw
	if [ $? -ne 0 ]; then
		return 1
	fi

	do_user_post
	ret=$?

	umount_rw

}

main $@
exit $?
